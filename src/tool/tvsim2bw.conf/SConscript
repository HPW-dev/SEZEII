#!/usr/bin/env python
Import(["env", "cxx", "cpp_flags", "is_linux", "defines", "ld_flags"])

if is_linux:
  print("this program not for Linux!")
  quit()

src_dir = "../../../src/"
thirdparty_path = "../../../thirdparty/"
sources = [
  Glob("*.cpp"),
  Glob("windows/*.cpp"),
  Glob(src_dir + "utils/*.cpp"),
  Glob(src_dir + "image/*.cpp"),
  Glob(src_dir + "plugins/*.cpp"),
  Glob(src_dir + "plugins/tvsim2bw/*.cpp"),
  Glob(thirdparty_path + "imgui/*.cpp"),
  thirdparty_path + "imgui/backends/imgui_impl_sdl.cpp",
  thirdparty_path + "imgui/backends/imgui_impl_sdlrenderer.cpp",
]
inc_path = [
  thirdparty_path + "DyLib",
  ".",
  src_dir,
  src_dir + "plugins/",
  thirdparty_path + "imgui",
  thirdparty_path + "imgui/backends",
  thirdparty_path,
]
lib_path = []
used_libs = []
bin_path = "../../../bin/"

if (is_linux):
  used_libs.extend(["pthread", "m", "SDL2", "dl"])
else:
  used_libs.extend(["mingw32", "SDL2main", "SDL2"])
  inc_path.extend([
    thirdparty_path + "DyLib",
    thirdparty_path + "SDL2/include",
    thirdparty_path + "SDL2/include/SDL2",
  ])
  lib_path.extend([
    thirdparty_path + "SDL2/lib",
  ])

env.Program(
  target = bin_path + "tvsim2bw-conf",
  source = sources,
  CXX = cxx,
  CXXFLAGS = cpp_flags,
  LIBPATH = lib_path,
  CPPPATH = inc_path,
  LINKFLAGS = ld_flags,
  LIBS = used_libs,
  CPPDEFINES = defines,
)
