#!/usr/bin/env python
Import(["env", "is_linux", "cxx", "defines",
  "cpp_flags", "ld_flags"])
import os

platform_dir = "linux" if is_linux else "windows"
plug_rel_dir = "../../bin/plugins/" + platform_dir + "/free/"

src_dir = "../"
cpp_path = [
  "../../thirdparty/itlib/include",
  "../../thirdparty",
  ".", # plugin dir
  src_dir,
]

def make_shared_lib(name, sources):
  env.SharedLibrary(
    target = plug_rel_dir + name,
    source = sources,
    CXX = cxx,
    CPPDEFINES = defines,
    LINKFLAGS = ld_flags,
    CXXFLAGS = cpp_flags,
    CPPPATH = cpp_path,
  )

make_shared_lib("invert", "invert/invert.c")

make_shared_lib("colorop", [
  "colorop/colorop.cpp",
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("pixelsort", [
  "pixelsort/pixelsort.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/cmd-parser.cpp",
])

make_shared_lib("lineswap", [
  "lineswap/lineswap.cpp",
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("average", [
  "frame-average/frame-average.cpp",
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("tvsim", [
  Glob("tvsim/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("stars", [
  Glob("stars/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("rdither", [
  Glob("rdither/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("shatter", [
  Glob("shatter/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/random.cpp",
])

'''
пока не могу добавить это
make_shared_lib("stabilyzer", [
  Glob("stabilyzer/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/log.cpp",
])
'''

make_shared_lib("gigascreen", [
  Glob("gigascreen/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
  src_dir + "utils/log.cpp",
])

make_shared_lib("quantizer", [
  Glob("quantizer/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("old pc", [
  Glob("old.pc/*.cpp"),
  Glob("old.pc/palette.accepter/*.cpp"),
  Glob("old.pc/color.finder/*.cpp"),
  Glob("old.pc/color.selector/*.cpp"),
  Glob("old.pc/dither/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("warpscan", [
  Glob("warpscan/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "utils/random.cpp",
])

make_shared_lib("tvsim2bw", [
  Glob("tvsim2/*.cpp"),
  "tvsim2/plugin/main.cpp",
  src_dir + "utils/pparser.cpp",
  src_dir + "utils/random.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("tvsim2yuv", [
  Glob("tvsim2/*.cpp"),
  "tvsim2/plugin/main-yuv.cpp",
  src_dir + "utils/pparser.cpp",
  src_dir + "utils/random.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("blkdthr", [
  Glob("blkdthr/*.c"),
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])

make_shared_lib("gradient_map", [
  Glob("gradient-map/*.cpp"),
  src_dir + "utils/cmd-parser.cpp",
  src_dir + "utils/log.cpp",
  src_dir + "image/image.cpp",
  src_dir + "image/color.cpp",
  src_dir + "image/RGB555-RGB565.cpp",
])
